{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/add-panel/index.js","components/add-panel/add-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","setTerm","el","setState","target","value","props","search","toLowerCase","type","placeholder","this","onChange","Component","TodoListItem","label","onDelete","onImportant","onDone","classNames","important","onClick","TodoList","todos","onDel","elements","map","item","id","itemProps","key","AddPanel","text","handleAdd","preventDefault","length","addItem","onSubmit","ItemStatusFilter","buttons","name","filter","onChangeFilter","clas","App","maxId","todoData","createItem","console","log","newItem","delItem","idx","findIndex","slice","changeStatus","param","oldItem","searchItems","items","elem","indexOf","visibleItems","doneItem","mustDone","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51d3a1a1.chunk.js","sourcesContent":["import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\n\nexport default SearchPanel;\n","import React, { Component } from 'react';\n\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n  state = {\n    term: ''\n  };\n\n  setTerm = (el) => {\n    this.setState({\n        term: el.target.value\n    });\n    this.props.search(el.target.value.toLowerCase());\n  };\n\n  render() {\n      return (\n          <input type=\"text\"\n                 className=\"form-control search-input\"\n                 placeholder=\"type to search\"\n                 value={this.state.term}\n                 onChange={this.setTerm}/>\n      );\n  }\n}\n\n","import TodoListItem from './todo-list-item';\n\nexport default TodoListItem;\n","import React from 'react';\n\nimport './todo-list-item.css';\n\nconst TodoListItem = ({label, onDelete, onImportant,\n                          onDone, done, important }) => {\n    let classNames = 'todo-list-item';\n\n    if (done) {\n        classNames += ' done';\n    }\n\n    if (important) {\n        classNames += ' important';\n    }\n\n    return (\n        <span className={classNames}>\n            <span\n                className=\"todo-list-item-label\"\n                onClick={onDone}>\n                {label}\n        </span>\n\n            <button type=\"button\"\n                    className=\"btn btn-outline-success btn-sm float-right\"\n                    onClick={onImportant}>\n                <i className=\"fa fa-exclamation\"/>\n            </button>\n\n            <button type=\"button\"\n                    className=\"btn btn-outline-danger btn-sm float-right\"\n                    onClick={onDelete}>\n                <i className=\"fa fa-trash-o\"/>\n            </button>\n        </span>\n    );\n};\n\nexport default TodoListItem;","import TodoList from './todo-list';\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDel,\n                  onImportant, onDone }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n            {...itemProps }\n            onDelete={() => onDel(id)}\n            onImportant={() => onImportant(id)}\n            onDone={() => onDone(id)}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import AddPanel from './add-panel';\n\nexport default AddPanel;","import React, { Component } from \"react\";\n\nimport './add-panel.css';\n\nexport default class AddPanel extends Component {\n\n    state = {\n        text: '',\n    };\n\n    onChange = (el) => {\n        this.setState({\n            text: el.target.value\n        }) ;\n\n    };\n\n    handleAdd = (el) => {\n        el.preventDefault();\n        if (this.state.text.length > 2) {\n            this.props.addItem(this.state.text);\n            this.setState({\n                text: '',\n            });\n        }\n    };\n\n    render() {\n\n        return (\n                <form className=\"item-add-form d-flex\"\n                onSubmit={this.handleAdd}>\n                    <input type=\"text\"\n                           className=\"text-input form-control search-input\"\n                           placeholder=\"type to add new thing\"\n                            onChange={this.onChange}\n                            value={this.state.text}/>\n                    <button className=\"btn btn-info\">\n                        Add new</button>\n                </form>\n        );\n    }\n};","import ItemStatusFilter from './item-status-filter';\n\nexport default ItemStatusFilter;\n","import React, { Component } from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        { name: 'all', label: 'All'},\n        { name: 'active', label: 'Active' },\n        { name: 'done', label: 'Done' },\n    ];\n\n    render() {\n\n        const { filter, onChangeFilter } = this.props;\n        const buttons = this.buttons.map(({ name, label}) => {\n            const isActive = filter === name;\n            const clas = isActive ? 'btn-info' : 'btn-outline-secondary';\n            return (\n                <button type=\"button\"\n                        className={`btn ${clas}`}\n                        key={name}\n                        onClick={() => onChangeFilter(name)}>\n                    {label}</button>\n            );\n        });\n\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        );\n    }\n};\n","import App from './app';\n\nexport default App;\n","import React, { Component }from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport AddPanel from '../add-panel';\nimport ItemStatusFilter from '../item-status-filter';\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createItem('Drink Coffee'),\n            this.createItem('Make Awesome App'),\n            this.createItem('Have a lunch'),\n        ],\n        term: '',\n        filter: 'all'\n    };\n\n    addItem = (text) => {\n        console.log(text);\n        const newItem = this.createItem(text);\n\n        this.setState(({todoData}) => {\n            let newData = [...todoData, newItem];\n            return {\n                todoData: newData\n            }\n        });\n    };\n\n    createItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        };\n    };\n\n    delItem = (id) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n            const newArr = [...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)];\n            return {\n                todoData: newArr,\n            };\n        });\n    };\n\n    changeStatus = (id, param) => {\n        this.setState(({todoData}) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n            const oldItem = todoData[idx];\n            const newItem = {...oldItem, [param]: !oldItem[param]};\n            const newArray = [...todoData.slice(0, idx),\n                newItem, ...todoData.slice(idx + 1)];\n            return {\n                todoData: newArray,\n            }\n        });\n    };\n\n    onDone = (id) => this.changeStatus(id, 'done');\n\n    onImportant = (id) => this.changeStatus(id, 'important');\n\n    searchItems = (items, elem) => {\n        if (elem.length === 0) {\n            return items;\n        }\n\n        return items.filter((item) => {\n            return item.label.toLowerCase().indexOf(elem) > -1;\n        });\n    };\n\n    setTerm = (term) => {\n        this.setState({ term });\n    };\n\n    filter = (items, filter) => {\n\n        switch (filter) {\n            case 'all': return items;\n            case  'active': return items.filter((item) => !item.done);\n            case  'done': return items.filter((item) => item.done);\n            default: return items;\n        }\n    };\n\n    onChangeFilter = (filter) => {\n        this.setState({ filter });\n    };\n\n    render() {\n\n        const { todoData, term, filter } = this.state;\n\n        const visibleItems = this.filter(\n            this.searchItems(todoData, term), filter);\n\n        let doneItem = todoData.filter((el) => {\n            return el.done === true;\n        }).length;\n\n        let mustDone = todoData.length - doneItem;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={mustDone} done={doneItem}/>\n                <div className=\"top-panel d-flex\">\n                    <SearchPanel\n                        search={this.setTerm}/>\n                    <ItemStatusFilter\n                        filter={filter}\n                        onChangeFilter={this.onChangeFilter}/>\n                </div>\n\n                <TodoList\n                    todos={visibleItems}\n                    onDel={this.delItem}\n                    onImportant={this.onImportant}\n                    onDone={this.onDone}\n                />\n                <AddPanel todos={this.state.todoData}\n                          addItem={this.addItem}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}